services:
  backend:
    build:
      context: ./backend
    container_name: budget-app-backend
    expose:
      - "8000"
    environment:
      - PYTHONUNBUFFERED=1
      # Database Configuration
      - DB_HOST=mysql
      - DB_USER=budget_user
      - DB_PASSWORD=budget_password
      - DB_NAME=budget_db
      # JWT Configuration (NEW)
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-this-in-production}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      # App Configuration
      - APP_NAME=${APP_NAME:-Budget App}
      - VERSION=${VERSION:-1.0.0}
      - DEBUG=${DEBUG:-true}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    command: sh -c "sleep 10 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend/app/llm_microservice/.env:/app/llm_microservice/.env
      # Optional: Mount .env file for easier development
      - ./backend/app/.env:/app/.env
  
  frontend:
    build:
      context: ./frontend
    container_name: budget-app-frontend
    expose:
      - "3000"
    depends_on:
      - backend
  
  llm_microservice:
    build:
      context: ./backend/app/llm_microservice
    container_name: llm-microservice
    expose:
      - "8001"
    volumes:
      - ./backend/app/llm_microservice/.env:/app/.env
  
  graph_microservice:
    build:
      context: ./backend/app/graph_microservice
    container_name: graph-microservice
    expose:
      - "8002"
    depends_on:
      - backend
  
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: budget-app-nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
      - llm_microservice
      - graph_microservice

  mysql:
    image: mysql:8.0
    container_name: budget-app-mysql
    restart: always
    environment:
      MYSQL_DATABASE: budget_db
      MYSQL_USER: budget_user
      MYSQL_PASSWORD: budget_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

volumes:
  mysql-data: